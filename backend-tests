1. Register:
  curl -v localhost:8080/register --header "Accept: application/json" --header "Content-Type: application/json" --data "{\"name\":\"test1\",\"username\":\"testusername1\",\"password\":\"testpassword1\",\"email\":\"testemail1\", \"token\":\"testtoken\"}"

2. Login:
  curl -X POST -v localhost:8080/login -H "Accept: application/json" --header "Content-Type: application/json" --data "{\"username\":\"username\",\"password\":\"password\"}"

3. Later...

4. Get Playlist
  curl -v localhost:8080/playlist/1 -H "Accept: application/json" --header "Content-Type: application/json"
    Answer: {"1":{"filename":"test.mp4","id":2},"2":{"filename":"yui-ura-on.mp4","id":1}}

5. Same as #4.

6. Edit Playlist (Changed Order)
  curl -X PUT -v localhost:8080/playlist/1/edit/order-change -H "Accept: application/json" --header "Content-Type: application/json" --data "{\"2\":{\"filename\":\"test.mp4\",\"id\":\"2\"},\"1\":{\"filename\":\"yui-ura-on.mp4\",\"id\":\"1\"}}}"

7. Edit Playlist (Change Title)
  curl -X PUT -v localhost:8080/playlist/1/edit/title-change -H "Accept: application/json" --header "Content-Type: application/json" --data "{\"userId\":\"1\", \"title\":\"testTitle\", \"date\":\"854775807\"}"

8. Delete Playlist
  curl -X DELETE -v localhost:8080/playlist/1 -H "Accept: application/json" --header "Content-Type: application/json"

9. Add Video to Playlist
  curl -X POST -v localhost:8080/playlist/1/edit/add-video -H "Accept: application/json" --header "Content-Type: application/json" --data "[{\"filename\":\"yui-ura-on-1554357642534.mp4\",\"id\":\"3\"},{\"filename\":\"yui-ura-on-1554357655029.mp4\",\"id\":\"4\"}]"
    You can't save videos that don't exist in VideoRepository into PlaylistRepository, and it's not bad to leave it this way because you should only be able to add videos that exist to playlists. Let's come back to this after I create add video controller.
      You must change filename (with date) everytime you make a front end call.

10. Create a playlist: I have to make Two calls to the controller: (create a promise for the first one, then after the first one finishes, do the second one adding playlistId to the url.) I can't combine this into one because @Requestbody for the first controller cannot read the playlist I send to when it's nested into playlistList.
  curl -X POST -v localhost:8080/playlist -H "Accept: application/json" --header "Content-Type: application/json" --data "{\"title\":\"test_title1\", \"userId\":\"1\", \"date\":\"12412351231\"}"

  curl -X POST -v localhost:8080/playlist/2/edit/add-video -H "Accept: application/json" --header "Content-Type: application/json" --data "[{\"filename\":\"yui-ura-on-1554375554857.mp4\",\"id\":\"3\"},{\"filename\":\"yui-ura-on-1554375629840.mp4\",\"id\":\"4\"}]"

11. Upload Video. Done through frontend testing
  
12. View Video. Done through frontend testing

13. Get All Playlists including video titles ordered.
  ->1. call allPlaylists().
    2. process Object in frontend for each playlist.
    curl -v localhost:8080/user/{1}/playlist -H "Accept: application/json" --header "Content-Type: application/json"

    //curl -X POST -v localhost:8080/playlist/1/edit/add-video -H "Accept: application/json" --header "Content-Type: application/json" --data "{\"2\":{\"filename\":\"test.mp4\",\"id\":\"2\"},\"1\":{\"filename\":\"yui-ura-on.mp4\",\"id\":\"1\"}},\"3\":{\"filename\":\"yui-ura-on-1554356620306.mp4\",\"id\":\"3\",\"date\":\"1554356620306\"}}"